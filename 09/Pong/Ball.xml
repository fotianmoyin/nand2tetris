<class>
    <keyword>class</keyword>
    <identifier>Ball</identifier>
    <symbol>{</symbol>
    <classVarDec>
        <keyword>field</keyword>
        <keyword>int</keyword>
        <identifier>x</identifier>
        <symbol>,</symbol>
        <identifier>y</identifier>
        <symbol>,</symbol>
        <identifier>r</identifier>
        <symbol>,</symbol>
        <identifier>d</identifier>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <keyword>int</keyword>
        <identifier>directionX</identifier>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <keyword>int</keyword>
        <identifier>directionY</identifier>
        <symbol>;</symbol>
    </classVarDec>
    <classVarDec>
        <keyword>field</keyword>
        <keyword>int</keyword>
        <identifier>startX</identifier>
        <symbol>;</symbol>
    </classVarDec>
    <subroutineDec>
        <keyword>constructor</keyword>
        <identifier>Ball</identifier>
        <identifier>new</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>r</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            5
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>d</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            2
                        </term>
                        <symbol>*</symbol>
                        <term>
                            <identifier>r</identifier>
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>x</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            20
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>y</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            <identifier>r</identifier>
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>directionX</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            2
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>directionY</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            2
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>draw</identifier>
                    <symbol>(</symbol>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <expression>
                        <term>
                            <keyword>this</keyword>
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <identifier>dispose</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <identifier>String</identifier>
                <identifier>s0</identifier>
                <symbol>,</symbol>
                <identifier>s1</identifier>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>s0</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            abcdef
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>s1</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            0123456
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>Memory</identifier>
                    <symbol>.</symbol>
                    <identifier>deAlloc</identifier>
                    <symbol>(</symbol>
                    <expressionList>
                        <expression>
                            <term>
                                <keyword>this</keyword>
                            </term>
                        </expression>
                    </expressionList>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <identifier>draw</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>Screen</identifier>
                    <symbol>.</symbol>
                    <identifier>setColor</identifier>
                    <symbol>(</symbol>
                    <expressionList>
                        <expression>
                            <term>
                                <keyword>true</keyword>
                            </term>
                        </expression>
                    </expressionList>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>Screen</identifier>
                    <symbol>.</symbol>
                    <identifier>drawCircle</identifier>
                    <symbol>(</symbol>
                    <expressionList>
                        <expression>
                            <term>
                                <identifier>x</identifier>
                            </term>
                        </expression>
                        <symbol>,</symbol>
                        <expression>
                            <term>
                                <identifier>y</identifier>
                            </term>
                        </expression>
                        <symbol>,</symbol>
                        <expression>
                            <term>
                                <identifier>r</identifier>
                            </term>
                        </expression>
                    </expressionList>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <identifier>erase</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>Screen</identifier>
                    <symbol>.</symbol>
                    <identifier>setColor</identifier>
                    <symbol>(</symbol>
                    <expressionList>
                        <expression>
                            <term>
                                <keyword>false</keyword>
                            </term>
                        </expression>
                    </expressionList>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>Screen</identifier>
                    <symbol>.</symbol>
                    <identifier>drawCircle</identifier>
                    <symbol>(</symbol>
                    <expressionList>
                        <expression>
                            <term>
                                <identifier>x</identifier>
                            </term>
                        </expression>
                        <symbol>,</symbol>
                        <expression>
                            <term>
                                <identifier>y</identifier>
                            </term>
                        </expression>
                        <symbol>,</symbol>
                        <expression>
                            <term>
                                <identifier>r</identifier>
                            </term>
                        </expression>
                    </expressionList>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <identifier>start</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>erase</identifier>
                    <symbol>(</symbol>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>startX</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            <identifier>startX</identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                            20
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <identifier>startX</identifier>
                        </term>
                        <symbol>&gt;</symbol>
                        <term>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    510
                                </term>
                                <symbol>-</symbol>
                                <term>
                                    <identifier>r</identifier>
                                </term>
                            </expression>
                            <symbol>)</symbol>
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <letStatement>
                            <keyword>let</keyword>
                            <identifier>startX</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>startX</identifier>
                                </term>
                                <symbol>-</symbol>
                                <term>
                                    30
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatement>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <identifier>startX</identifier>
                        </term>
                        <symbol>&lt;</symbol>
                        <term>
                            1
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <letStatement>
                            <keyword>let</keyword>
                            <identifier>startX</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>startX</identifier>
                                </term>
                                <symbol>+</symbol>
                                <term>
                                    10
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatement>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>y</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            <identifier>r</identifier>
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>directionX</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            2
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>directionY</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            2
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>draw</identifier>
                    <symbol>(</symbol>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <identifier>move</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <keyword>int</keyword>
                <identifier>offsetX</identifier>
                <symbol>,</symbol>
                <identifier>offsetY</identifier>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <identifier>directionX</identifier>
                        </term>
                        <symbol>=</symbol>
                        <term>
                            1
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <ifStatement>
                            <keyword>if</keyword>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <identifier>x</identifier>
                                        </term>
                                        <symbol>-</symbol>
                                        <term>
                                            <identifier>r</identifier>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                </term>
                                <symbol>&lt;</symbol>
                                <term>
                                    1
                                </term>
                            </expression>
                            <symbol>)</symbol>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>directionX</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            2
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetX</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            1
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                            <keyword>if</keyword>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetX</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>-</symbol>
                                            <term>
                                                1
                                            </term>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                        </ifStatement>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <identifier>offsetX</identifier>
                                </term>
                                <symbol>=</symbol>
                                <term>
                                    0
                                </term>
                            </expression>
                            <symbol>)</symbol>
                        </term>
                        <symbol>&amp;</symbol>
                        <term>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <identifier>directionX</identifier>
                                </term>
                                <symbol>=</symbol>
                                <term>
                                    2
                                </term>
                            </expression>
                            <symbol>)</symbol>
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <ifStatement>
                            <keyword>if</keyword>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <identifier>x</identifier>
                                </term>
                                <symbol>+</symbol>
                                <term>
                                    <identifier>r</identifier>
                                </term>
                                <symbol>&gt;</symbol>
                                <term>
                                    510
                                </term>
                            </expression>
                            <symbol>)</symbol>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>directionX</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            1
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetX</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>-</symbol>
                                            <term>
                                                1
                                            </term>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                            <keyword>if</keyword>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetX</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            1
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                        </ifStatement>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <identifier>directionY</identifier>
                        </term>
                        <symbol>=</symbol>
                        <term>
                            1
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <ifStatement>
                            <keyword>if</keyword>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <identifier>y</identifier>
                                        </term>
                                        <symbol>-</symbol>
                                        <term>
                                            <identifier>r</identifier>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                </term>
                                <symbol>&lt;</symbol>
                                <term>
                                    1
                                </term>
                            </expression>
                            <symbol>)</symbol>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>directionY</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            2
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetY</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            1
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                            <keyword>if</keyword>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetY</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>-</symbol>
                                            <term>
                                                1
                                            </term>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                        </ifStatement>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <identifier>offsetY</identifier>
                                </term>
                                <symbol>=</symbol>
                                <term>
                                    0
                                </term>
                            </expression>
                            <symbol>)</symbol>
                        </term>
                        <symbol>&amp;</symbol>
                        <term>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <identifier>directionY</identifier>
                                </term>
                                <symbol>=</symbol>
                                <term>
                                    2
                                </term>
                            </expression>
                            <symbol>)</symbol>
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <ifStatement>
                            <keyword>if</keyword>
                            <symbol>(</symbol>
                            <expression>
                                <term>
                                    <symbol>(</symbol>
                                    <expression>
                                        <term>
                                            <identifier>y</identifier>
                                        </term>
                                        <symbol>+</symbol>
                                        <term>
                                            <identifier>r</identifier>
                                        </term>
                                    </expression>
                                    <symbol>)</symbol>
                                </term>
                                <symbol>&gt;</symbol>
                                <term>
                                    254
                                </term>
                            </expression>
                            <symbol>)</symbol>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>directionY</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            1
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetY</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            <symbol>-</symbol>
                                            <term>
                                                1
                                            </term>
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                            <keyword>if</keyword>
                            <symbol>{</symbol>
                            <statements>
                                <letStatement>
                                    <keyword>let</keyword>
                                    <identifier>offsetY</identifier>
                                    <symbol>=</symbol>
                                    <expression>
                                        <term>
                                            1
                                        </term>
                                    </expression>
                                    <symbol>;</symbol>
                                </letStatement>
                            </statements>
                            <symbol>}</symbol>
                        </ifStatement>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <symbol>~</symbol>
                            <term>
                                <symbol>(</symbol>
                                <expression>
                                    <term>
                                        <identifier>offsetX</identifier>
                                    </term>
                                    <symbol>=</symbol>
                                    <term>
                                        0
                                    </term>
                                </expression>
                                <symbol>)</symbol>
                            </term>
                        </term>
                        <symbol>|</symbol>
                        <term>
                            <symbol>~</symbol>
                            <term>
                                <symbol>(</symbol>
                                <expression>
                                    <term>
                                        <identifier>offsetY</identifier>
                                    </term>
                                    <symbol>=</symbol>
                                    <term>
                                        0
                                    </term>
                                </expression>
                                <symbol>)</symbol>
                            </term>
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <doStatement>
                            <keyword>do</keyword>
                            <identifier>erase</identifier>
                            <symbol>(</symbol>
                            <symbol>)</symbol>
                            <symbol>;</symbol>
                        </doStatement>
                        <letStatement>
                            <keyword>let</keyword>
                            <identifier>x</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>x</identifier>
                                </term>
                                <symbol>+</symbol>
                                <term>
                                    <identifier>offsetX</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatement>
                        <letStatement>
                            <keyword>let</keyword>
                            <identifier>y</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>y</identifier>
                                </term>
                                <symbol>+</symbol>
                                <term>
                                    <identifier>offsetY</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatement>
                        <doStatement>
                            <keyword>do</keyword>
                            <identifier>draw</identifier>
                            <symbol>(</symbol>
                            <symbol>)</symbol>
                            <symbol>;</symbol>
                        </doStatement>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>int</keyword>
        <identifier>getX</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <returnStatement>
                    <keyword>return</keyword>
                    <expression>
                        <term>
                            <identifier>x</identifier>
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>int</keyword>
        <identifier>getBottom</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <returnStatement>
                    <keyword>return</keyword>
                    <expression>
                        <term>
                            <identifier>y</identifier>
                        </term>
                        <symbol>+</symbol>
                        <term>
                            <identifier>r</identifier>
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>boolean</keyword>
        <identifier>isGoDown</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <returnStatement>
                    <keyword>return</keyword>
                    <expression>
                        <term>
                            <identifier>directionY</identifier>
                        </term>
                        <symbol>=</symbol>
                        <term>
                            2
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>method</keyword>
        <keyword>void</keyword>
        <identifier>setGoUp</identifier>
        <symbol>(</symbol>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <statements>
                <letStatement>
                    <keyword>let</keyword>
                    <identifier>directionY</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            1
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <symbol>}</symbol>
</class>