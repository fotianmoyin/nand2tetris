// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c;
        var boolean pressed;
        do Output.printChar(0);
        // 按下检测
        while (~pressed) {
            let c = Keyboard.keyPressed();
            if (c > 0){
                let pressed = true;
            }
        }
        // 抬起检测
        while(pressed){
            if (Keyboard.keyPressed() = 0){
                let pressed = false;
            }
        }
        do Output.backSpace();
        do Output.printChar(c);
        return c;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     * 该方法为官方方案
     */
    //  function char readChar() {
    //     var int key_val,key_press;
    //     do Output.printChar(0);
    //     while((key_press = 0) | (key_val > 0)){
    //         let key_val = Keyboard.keyPressed();
    //         if (key_val > 0){
    //             let key_press = key_val;
    //         }
    //     }
    //     do Output.printChar(String.backSpace());
    //     do Output.printChar(key_press);
    //     return key_press;
    // }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String s;
        var char c;
        var boolean no_newline;
        let s = String.new(80);
        let no_newline = true;
        do Output.printString(message);
        while(no_newline){
            let c = Keyboard.readChar();
            if(c = String.newLine()){
                // 换行符
                let no_newline = false;
            }
            else{
                if (c = String.backSpace()){
                    // 退格符
                    do s.eraseLastChar();
                }
                else{
                    let s = s.appendChar(c);
                }
            }
        }
        return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var int val;
        var String s;
        var boolean trans;
        var boolean neg;
        var int i;
        var int len;
        var int num;
        // 读取字符串
        let s = Keyboard.readLine(message);
        let len = s.length();
        // 负号检测
        if ((len > 0) & (s.charAt(0) = 45)){
            let neg = true;
            let i = 1;
        }
        // 数字转换
        let trans = true;
        while(trans){
            if (i < len){
                let num = s.charAt(i) - 48;
                if ((num < 0) | (num > 9)){
                    let trans = false;
                }
                else{
                    let val = (val * 10) + num;
                }
            }
            else{
                let trans = false;
            }
            let i = i + 1;
        }
        if (neg){
            // 负值运算
            let val = -val;
        }
        return val;
    }
}
